PRINT N'Creating SurveyConfigurator...';  
GO 
IF NOT EXISTS (SELECT * FROM sys.databases where Name='SurveyConfigurator')
CREATE DATABASE [SurveyConfigurator];

GO 
USE [SurveyConfigurator]
GO
 --last updated time stamp table (single row at all times)
 
PRINT N'Creating SurveyConfigurator.LastUpdate...';  
GO  
IF NOT EXISTS (SELECT * 
                 FROM sys.tables 
                 WHERE  name = 'LastUpdate')
		 
CREATE TABLE [dbo].[LastUpdate] (  
    
    [UpdateTime] DateTime NOT NULL 
   
);  
PRINT N'Creating SurveyConfigurator.Question...';  
GO  
IF NOT EXISTS (SELECT * 
                 FROM sys.tables 
                 WHERE  name = 'Question')
		 
CREATE TABLE [dbo].[Question] (  
    [Id]   INT   IDENTITY (1, 1) NOT NULL,  
	[Order]   INT   NOT NULL,  
    [Text] VARCHAR(1000) NOT NULL,  
    [Type]    VARCHAR (20)   NOT NULL,  
   
);  

PRINT N'Creating SurveyConfigurator.QuestionSmiley...';  
GO  
IF NOT EXISTS (SELECT * 
                 FROM sys.tables 
                 WHERE   name = 'QuestionSmiley')
				  
CREATE TABLE [dbo].[QuestionSmiley] (  
    [Id] INT      NOT NULL,  
    [NumberOfSmileys]     INT      NOT NULL  
);  
GO  
PRINT N'Creating SurveyConfigurator.QuestionStars...';  
GO  
IF NOT EXISTS (SELECT * 
                 FROM sys.tables 
                 WHERE   name = 'QuestionStars')
				  
CREATE TABLE [dbo].[QuestionStars] (  
    [Id] INT      NOT NULL,  
    [NumberOfStars]     INT      NOT NULL  
);  
GO  
PRINT N'Creating SurveyConfigurator.QuestionSlider...';  
GO
IF NOT EXISTS (SELECT * 
                 FROM sys.tables 
                 WHERE   name = 'QuestionSlider')
				  
CREATE TABLE [dbo].[QuestionSlider] (  
    [Id] INT      NOT NULL,  
    [StartValue]     INT      NOT NULL ,
    [EndValue]     INT      NOT NULL ,
    [StartCaption]   VARCHAR(50)      NOT NULL ,
    [EndCaption]   VARCHAR(50)     NOT NULL
);  
GO  
PRINT N'Creating SurveyConfigurator.PK_Question_Id...';  
GO  

IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE CONSTRAINT_TYPE = 'PRIMARY KEY' AND TABLE_NAME = 'Question') 
ALTER TABLE [dbo].[Question]  
    ADD CONSTRAINT [PK_Question_Id] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);  
GO  
PRINT N'Creating [FK_QuestionSmiley_Question_Id]...';  
GO  
IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE CONSTRAINT_TYPE = 'FOREIGN KEY' AND TABLE_NAME = 'QuestionSmiley') 
ALTER TABLE [dbo].[QuestionSmiley]  
    ADD CONSTRAINT [FK_QuestionSmiley_Question_Id] FOREIGN KEY ([Id]) REFERENCES [dbo].[Question] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;  
GO  
PRINT N'Creating [FK_QuestionStars_Question_Id]...';  
GO  
IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE CONSTRAINT_TYPE = 'FOREIGN KEY' AND TABLE_NAME = 'QuestionStars') 
ALTER TABLE [dbo].[QuestionStars]  
    ADD CONSTRAINT [FK_QuestionStars_Question_Id] FOREIGN KEY ([Id]) REFERENCES [dbo].[Question] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;  
GO  
PRINT N'Creating [FK_QuestionSlider_Question_Id]...';  
GO  
IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE CONSTRAINT_TYPE = 'FOREIGN KEY' AND TABLE_NAME = 'QuestionSlider')  
ALTER TABLE [dbo].[QuestionSlider]  
    ADD CONSTRAINT [FK_QuestionSlider_Question_Id] FOREIGN KEY ([Id]) REFERENCES [dbo].[Question] ([Id]) ON DELETE NO ACTION ON UPDATE NO ACTION;  
GO  

PRINT N'Creating P_LastUpdate Procedure...'; 
GO  
IF EXISTS (SELECT * FROM sys.objects WHERE type='P' AND name='P_LastUpdate')
DROP PROCEDURE P_LastUpdate
GO
CREATE PROCEDURE [dbo].[P_LastUpdate](
@UpdateTime DateTime
)
AS  
BEGIN  TRAN

	DELETE FROM LastUpdate;
	INSERT INTO [dbo].[LastUpdate] (UpdateTime) VALUES (@UpdateTime)

COMMIT TRAN
RETURN @@ERROR
GO  


PRINT N'Creating P_GetLastUpdate Procedure...'; 
GO  
IF EXISTS (SELECT * FROM sys.objects WHERE type='P' AND name='P_GetLastUpdate')
DROP PROCEDURE P_GetLastUpdate
GO
CREATE PROCEDURE [dbo].[P_GetLastUpdate](
@UpdateTime DateTime OUTPUT
)
AS  
BEGIN
	SET @UpdateTime = (SELECT * FROM [LastUpdate]  )
END
RETURN @@ERROR
GO  

PRINT N'Creating Insert Questions Procedure...'; 
GO  
IF EXISTS (SELECT * FROM sys.objects WHERE type='P' AND name='P_Insert')
DROP PROCEDURE P_Insert
PRINT N'Dropped Old Procedure...';  

GO
CREATE PROCEDURE [dbo].[P_Insert](
@Id INT OUTPUT,
@Text VARCHAR (1000),  
@Order INT=1,
@Type VARCHAR(20)  ,
@StartValue INT=0,
@EndValue INT=100,
@StartCaption VARCHAR(50) = '',
@EndCaption VARCHAR(50) = '',
@NumberOfStars INT = 10 ,
@NumberOfSmileys INT = 5
)
AS  
BEGIN  TRAN

	INSERT INTO [dbo].[Question] (Text,Type,"Order") VALUES (@Text,@Type,@Order);  
	SET @Id = SCOPE_IDENTITY();  
	  
	 IF @Type='Smiley'
		INSERT INTO  [dbo].[QuestionSmiley] (Id, NumberOfSmileys)   
		VALUES (@Id, @NumberOfSmileys)  
	ELSE IF @Type='Star'
		INSERT INTO  [dbo].[QuestionStars] (Id, NumberOfStars)   
		VALUES (@Id, @NumberOfStars)  
	ELSE IF @Type='Slider'
		INSERT INTO  [dbo].[QuestionSlider] (Id, StartValue , EndValue , StartCaption, EndCaption)   
		VALUES (@Id, @StartValue , @EndValue , @StartCaption, @EndCaption)  

COMMIT TRAN
RETURN @@ERROR


GO  
   
GO  
 
  PRINT N'Creating Edit Questions Procedure...'; 
GO  
IF EXISTS (SELECT * FROM sys.objects WHERE type='P' AND name='P_Edit')
DROP PROCEDURE P_Edit
PRINT N'Dropped Old Procedure...';  

GO
CREATE PROCEDURE [dbo].[P_Edit](
@Id INT,
@Text VARCHAR (1000),  
@Order INT=1,
@Type VARCHAR(20),
@StartValue INT=0,
@EndValue INT=100,
@StartCaption VARCHAR(50) = '',
@EndCaption VARCHAR(50) = '',
@NumberOfStars INT = 10 ,
@NumberOfSmileys INT = 5
)
AS  
BEGIN  TRAN

	UPDATE Question SET  Text=@Text,"Order"=@Order
     WHERE [dbo].[Question].Id =@Id  
 
	 
	  
	 IF @Type='Smiley'
		 UPDATE QuestionSmiley SET  NumberOfSmileys=@NumberOfSmileys
		 WHERE [dbo].[QuestionSmiley].Id =@Id  
	ELSE IF @Type='Star'
		UPDATE QuestionStars SET  NumberOfStars=@NumberOfStars
		 WHERE [dbo].[QuestionStars].Id =@Id  
	ELSE IF @Type='Slider'
	UPDATE [QuestionSlider] SET  StartValue=@StartValue , EndValue= @EndValue , StartCaption=@StartCaption, EndCaption=@EndCaption
		 WHERE [dbo].[QuestionSlider].Id =@Id  
		 

COMMIT TRAN
RETURN @@ERROR


GO  

PRINT N'Creating P_GetSmileyQuestion Procedure...'; 
 GO
IF EXISTS (SELECT * FROM sys.objects WHERE type='P' AND name='P_GetSmileyQuestion')
DROP PROCEDURE P_GetSmileyQuestion
PRINT N'Dropped Old Procedure...';  

GO
CREATE PROCEDURE [dbo].P_GetSmileyQuestion(
@Id INT 
)
AS  
BEGIN 

SELECT * FROM QuestionSmiley LEFT JOIN Question ON QuestionSmiley.Id = Question.Id WHERE QuestionSmiley.Id=@Id
	
RETURN   @@ERROR

END  
GO  


GO    
PRINT N'Creating P_GetStarQuestion Procedure...'; 
 GO
IF EXISTS (SELECT * FROM sys.objects WHERE type='P' AND name='P_GetStarQuestion')
DROP PROCEDURE P_GetStarQuestion
PRINT N'Dropped Old Procedure...';  

GO
CREATE PROCEDURE [dbo].P_GetStarQuestion(
@Id INT 
)
AS  
BEGIN 

SELECT * FROM QuestionStars LEFT JOIN Question ON QuestionStars.Id = Question.Id WHERE QuestionStars.Id=@Id
	
RETURN   @@ERROR

END  
GO  


GO    
PRINT N'Creating P_GetSliderQuestion Procedure...'; 
 GO
IF EXISTS (SELECT * FROM sys.objects WHERE type='P' AND name='P_GetSliderQuestion')
DROP PROCEDURE P_GetSliderQuestion
PRINT N'Dropped Old Procedure...';  

GO
CREATE PROCEDURE [dbo].P_GetSliderQuestion(
@Id INT 
)
AS  
BEGIN 

SELECT * FROM QuestionSlider LEFT JOIN Question ON QuestionSlider.Id = Question.Id WHERE QuestionSlider.Id=@Id
	
RETURN   @@ERROR

END  
GO  

  
GO  
  PRINT N'Creating Delete Questions Procedure...'; 
GO  
IF EXISTS (SELECT * FROM sys.objects WHERE type='P' AND name='P_Delete')
DROP PROCEDURE P_Delete
PRINT N'Dropped Old Procedure...';  

GO
CREATE PROCEDURE [dbo].[P_Delete](
@Id INT
 
)
AS  
BEGIN  TRAN
	DECLARE @Type AS VARCHAR(20)=(SELECT Type FROM [dbo].[Question] 
     WHERE [dbo].[Question].Id =@Id );
	
	 IF @Type='Smiley'
		DELETE FROM  [dbo].[QuestionSmiley] 
		 WHERE [dbo].[QuestionSmiley].Id =@Id  
	ELSE IF @Type='Star'
		DELETE FROM  [dbo].[QuestionStars] 
		 WHERE [dbo].[QuestionStars].Id =@Id 
	ELSE IF @Type='Slider'
		DELETE FROM  [dbo].[QuestionSlider] 
		 WHERE [dbo].[QuestionSlider].Id =@Id 

	DELETE FROM  [dbo].[Question] 
     WHERE [dbo].[Question].Id =@Id 

COMMIT TRAN
RETURN @@ERROR
GO  

  
GO  
  PRINT N'Creating View All Questions Procedure...'; 
GO  
IF EXISTS (SELECT * FROM sys.objects WHERE type='P' AND name='P_View')
BEGIN
DROP PROCEDURE P_View
PRINT N'Dropped Old Procedure...';  
END

GO
CREATE PROCEDURE [dbo].[P_View]
AS  
BEGIN  
	SELECT Question.Id,Text,Type,"Order",concat('Number of Smileys: ',NumberOfSmileys) as 'Properties' FROM QuestionSmiley LEFT JOIN Question ON QuestionSmiley.Id = Question.Id 
	UNION 
    SELECT Question.Id,Text,Type,"Order",concat('Number of Stars: ', NumberOfStars) as 'Properties' FROM QuestionStars LEFT JOIN Question ON QuestionStars.Id = Question.Id
    UNION 
    SELECT Question.Id,Text,Type,"Order",concat('Start Value: ',StartValue, '  Start Caption: ', StartCaption,'  End Value: ', EndValue, '  End Caption: ' ,EndCaption) as 'Properties' FROM QuestionSlider LEFT JOIN Question ON QuestionSlider.Id = Question.Id
 RETURN @@ERROR
END  
GO  